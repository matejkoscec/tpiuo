version: "2.1"

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      - kafka_network

  kafka1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - kafka_network

  kowl:
    image: quay.io/cloudhut/kowl:v1.2.1
    restart: on-failure
    hostname: kowl
    volumes:
      - ./config.yaml:/etc/kowl/config.yaml
    ports:
      - "8080:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - kafka1
    networks:
      - kafka_network

  producer:
    container_name: go-kafka-producer
    build:
      context: producer
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka1:19092
    networks:
      - kafka_network

  consumer:
    container_name: go-kafka-consumer
    build:
      context: consumer
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      BOOTSTRAP_SERVERS: kafka1:19092
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge
